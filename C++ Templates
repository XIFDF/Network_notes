# C++ Templates 读书笔记
## 类模板的特化
可以用模板实参来特化类模板。和函数模板的重载类似，通过特化类模板，你可以优化基于某种特定类型的实现，或者克服某种特定类型在实例化类模板时多出现的不足。
* 为了特化一个类模板，你必须在起始处声明一个template<>，接下来声明用来特化类模板的类型。这个类型被用作模板实参，且必须在类名的后面直接指定。
```c++
template<>
class Stack<std::string> {
  ...
}
``` 
* 进行类模板的特化时，每个成员函数都必须重新定义为普通函数，原来模板函数中的每个T也相应地被进行特化的类型取代：
```c++
void Stack<std::string>::push (std::string const& elem)
{
    elems.push_back(elem);
}
```
